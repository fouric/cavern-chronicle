(in-package :cavern-chronicle)

(defun boring-entrypoint ()
  (let ((start-time (sdl2:get-ticks)))
    (sdl2:with-init (:everything)
      (sdl2:hide-cursor)
      (f:with-ttf-init
        (sdl2:with-window (window :w +screen-width+ :h +screen-height+ :flags '(:shown))
          (sdl2:with-renderer (renderer window :flags '(:accelerated :presentvsync))
            (play renderer start-time)))))))

(defun play (renderer start-time)
  (let ((graphics (make-graphics)))
    (sdl2:with-event-loop (:method :poll)
      (:keydown (:keysym keysym)
                (print keysym))
      (:keyup (:keysym keysym)
              (when (sdl2:scancode= (sdl2:scancode-value keysym) :scancode-escape)
                (sdl2:push-event :quit)))
      (:idle ()
             (update)
             (draw renderer)
             (sleep 0.1)
             (let ((elapsed-time (- (sdl2:get-ticks) start-time)))
               (declare (ignore elapsed-time))
               #++(f:out elapsed-time))
             ;; put it at the end so we include the time needed to process events
             (setf start-time (sdl2:get-ticks)))
      (:quit ()
             (graphics-destroy graphics)
             t))))

(defun update ()
  )

(defun draw (renderer)
  (sdl2:set-render-draw-color renderer 40 40 40 255)
  (sdl2:render-clear renderer)
  (sdl2:render-present renderer))
